/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */.hamburger{display:inline-block;cursor:pointer;transition-property:opacity,filter;transition-duration:.15s;transition-timing-function:linear;font:inherit;color:inherit;text-transform:none;background-color:transparent;border:0;margin:0;overflow:visible}.hamburger.is-active:hover,.hamburger:hover{opacity:.7}.hamburger.is-active .hamburger-inner,.hamburger.is-active .hamburger-inner:after,.hamburger.is-active .hamburger-inner:before{background-color:#000}.hamburger-box{width:40px;height:24px;display:inline-block;position:relative}.hamburger-inner{display:block;top:50%;margin-top:-2px}.hamburger-inner,.hamburger-inner:after,.hamburger-inner:before{width:40px;height:4px;background-color:#000;border-radius:4px;position:absolute;transition-property:transform;transition-duration:.15s;transition-timing-function:ease}.hamburger-inner:after,.hamburger-inner:before{content:"";display:block}.hamburger-inner:before{top:-10px}.hamburger-inner:after{bottom:-10px}.hamburger--spin .hamburger-inner{transition-duration:.22s;transition-timing-function:cubic-bezier(.55,.055,.675,.19)}.hamburger--spin .hamburger-inner:before{transition:top .1s ease-in .25s,opacity .1s ease-in}.hamburger--spin .hamburger-inner:after{transition:bottom .1s ease-in .25s,transform .22s cubic-bezier(.55,.055,.675,.19)}.hamburger--spin.is-active .hamburger-inner{transform:rotate(225deg);transition-delay:.12s;transition-timing-function:cubic-bezier(.215,.61,.355,1)}.hamburger--spin.is-active .hamburger-inner:before{top:0;opacity:0;transition:top .1s ease-out,opacity .1s ease-out .12s}.hamburger--spin.is-active .hamburger-inner:after{bottom:0;transform:rotate(-90deg);transition:bottom .1s ease-out,transform .22s cubic-bezier(.215,.61,.355,1) .12s}.hamburger{position:absolute;top:2em;right:1.5em;transform:translateY(-50%)}.hamburger,.hamburger-inner,.hamburger-inner:after,.hamburger-inner:before{z-index:500}.section-padding{padding:3em 1em}.section-heading{position:relative;padding-bottom:.5em;font-size:3.5rem;margin-bottom:1.5em;text-align:center}.section-heading:after{content:"";background-color:#a1cec5;position:absolute;width:150px;height:8px;bottom:0;left:50%;transform:translateX(-50%)}.wrapper{margin:0 auto;width:100%;max-width:1200px}@media (min-width:576px){.hamburger{padding:1em;top:2.5em}.section-heading{font-size:3.8rem}.section-heading:after{width:170px}}@media (min-width:768px){.section-heading:after{width:180px}.section-heading{font-size:4rem}.section-padding{padding:3.5em 1.5em}}@media (min-width:992px){.section-heading:after{width:200px}.section-heading{font-size:4.2rem}.section-padding{padding:4em 2em}}@media (min-width:1200px){.section-heading:after{width:200px}.section-padding{padding:6em 0}.section-heading{font-size:4.5rem}}*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{font-size:62.5%;scroll-behavior:smooth}body{font-family:Open Sans,sans-serif;font-size:1.6rem;color:#104845;background-color:#f7f7f7}.nav{position:relative}.nav-bar{padding:1em 0;z-index:100;background-color:#fff;border-bottom:1px solid rgba(0,0,0,.2)}.nav-bar,.nav-content{position:fixed;width:100%}.nav-content{display:none;align-items:center;flex-direction:column;padding-top:5em;height:100vh;z-index:1;background-color:#a1cec5}.nav-active{display:flex}.nav__item{position:relative;color:#104845;font-size:2.2rem;margin-top:1em;padding:.5em;text-decoration:none;transition:color .3s}.nav__item:after,.nav__item:before{content:"";position:absolute;width:0;bottom:0;border-bottom:2px solid #104845}.nav__item:before{right:50%}.nav__item:after{left:50%}.nav__item:hover:after,.nav__item:hover:before{transition:width .3s;width:50%}.nav__item:last-of-type:after,.nav__item:last-of-type:before{display:none}.nav__logo{color:#162b6f;font-weight:700;text-transform:uppercase;margin-left:.5em}.nav__btn{position:relative;cursor:pointer;border-radius:30px;padding:.5em 2em;border:none;color:#f7f7f7;font-size:2rem;background-color:#a1483d;z-index:1;transition:width .3s;overflow:hidden}.nav__btn:before{content:"";position:absolute;top:0;left:0;height:100%;width:0;background-color:#104845;z-index:-1;transition:width .3s}.nav__btn:hover:before{width:100%}.nav-desktop{display:none}.header{position:relative;background-image:url(/dist/img/headerImg.jpg);background-size:cover;background-position:50%;background-attachment:fixed;height:100vh;z-index:0}.header__shadow{background-color:rgba(2,25,24,.8);z-index:0}.header__info,.header__shadow{position:absolute;width:100%;height:100%}.header__info{display:flex;flex-direction:column;text-align:center;align-items:center;justify-content:center;color:#fff;z-index:1}.header__heading{text-transform:uppercase;font-size:4rem;margin-bottom:.3em}.header__link{bottom:5%;position:absolute;animation:a 2s none ease-in-out infinite}.header__arrow{font-size:50px;bottom:5%;color:#f7f7f7}@keyframes a{25%{bottom:2%}50%{bottom:5%}75%{bottom:2%}to{bottom:5%}}.header__text{font-size:2.2rem}.aboutus__text-box{margin-bottom:2em}.aboutus .section-heading{text-align:left}.aboutus .section-heading:after{left:0;transform:translateX(0)}.aboutus__img-box{width:100%}.numbers{text-align:center;background-color:#a1cec5}.numbers__box{margin-bottom:3em}.numbers__box:last-of-type{margin-bottom:0}.numbers__info{font-size:3.5rem;font-weight:700;margin-bottom:.1em}.numbers__text{padding-bottom:1em;font-size:2rem}.service .wrapper{display:flex;flex-direction:column;align-items:center}.service__box{position:relative;margin:1em 0;background-color:red;width:100%;height:350px}.service__box-img{transform:translate(-2%,3%);right:2%;top:2%;background-color:#fff;height:65%;width:100%;border:1px solid rgba(0,0,0,.2)}.service__box--first{background-color:#104845}.service__box--second{background-color:#517445}.service__box--third{background-color:#34756e}.service__box-content{color:#f7f7f7;text-align:center}.service__box-title{padding:.5em;font-size:2.2rem}.service__box-text{padding:0 .3em}.contact{color:#f7f7f7;background-color:#104845}.contact .section-heading:after{background-color:#f97e6d}.contact .section-heading{margin:.3em}.contact__name{color:#a1cec5;font-size:2rem;text-align:center}.contact .wrapper{margin-top:1em;text-align:center}.contact__card{padding:1.5em}.contact__box{display:flex;align-items:center;justify-content:center;margin-bottom:.3em}.contact__box-icon{margin:0 1em 1em 0}.contact__box-text{color:#fac390}.projects .wrapper{display:flex;flex-direction:column;align-items:center}.projects__box{margin-bottom:2em;width:200px;height:200px;border:1px solid #000}.opinions .wrapper{display:flex;justify-content:center}.opinions .slide,.opinions .slider{position:relative}.opinions .slide{width:250px;animation:slide .4s linear}.opinions .slide>*{animation:b linear .5s}@keyframes b{0%{opacity:0;transform:rotateY(180deg)}}.opinions .fa-chevron-left,.opinions .fa-chevron-right{position:absolute;top:50%;transform:translateY(-50%);text-align:center;font-size:20px;cursor:pointer;border-radius:50%;color:#104845}.opinions .fa-chevron-left{left:-20px}.opinions .fa-chevron-right{right:-20px}.opinions .user{display:none}.opinions .user__info{display:flex;flex-direction:column;align-items:center}.opinions .user__info-img{box-shadow:0 4px 8px 0 rgba(0,0,0,.4),0 6px 20px 0 rgba(0,0,0,.4);width:130px;height:130px;border-radius:50%}.opinions .user__info-name{margin:.5em 0;font-size:2rem;font-weight:700}.opinions .user__info-text{text-align:center}.opinions .user__box{font-size:1.2rem;margin-top:1em;align-self:end;display:flex;justify-content:center;width:40%;padding:.4em .2em;border-radius:10px;box-shadow:0 4px 8px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19)}.opinions .user__box-icon{margin-right:.4em;color:#fcc040}.opinions .user__box-icon:last-of-type{margin-right:0}.opinions .active{display:block}.footer{padding:2em;text-align:center;color:#f7f7f7;background-color:#104845}.footer__logo{font-size:2rem;font-weight:700;text-transform:uppercase}@media (min-width:450px){.service__box{width:80%}}@media (min-width:576px){.nav-content{padding-top:10em}.nav-active{display:flex}.nav__item{font-size:3rem}.service__box{width:60%}.projects__box{width:300px;height:300px}}@media (min-width:768px){.nav__btn{font-size:2.5rem}.header__heading{font-size:4.5rem;margin-bottom:.5em}.header__text{font-size:2.5rem}.aboutus__content{display:flex;align-items:center}.aboutus__text{width:120%;padding-right:2em}.numbers .wrapper{display:flex;flex-direction:column;align-items:center}.numbers__box{width:50%;margin:0 5em;margin-bottom:2em}.numbers__box--middle{padding:2em 0;border-top:2px solid #fff;border-bottom:2px solid #fff}.numbers__info{font-size:4rem;margin-bottom:.2em}.numbers__text{padding-bottom:1em;font-size:2.2rem}.service .wrapper{flex-direction:row;flex-wrap:wrap;justify-content:center}.service__box{margin:0 1.5em 3em;width:40%}.service__box-img{height:60%}.contact .wrapper{justify-content:space-around;display:flex}.contact__name{font-size:2.2rem}.contact__card{font-size:1.8rem}.projects__box{margin-bottom:3em}.opinions .slide{width:450px}.opinions .fa-chevron-left,.opinions .fa-chevron-right{font-size:30px}.opinions .fa-chevron-left{left:-25px}.opinions .fa-chevron-right{right:-25px}.opinions .user__info-img{width:200px;height:200px}.opinions .user__info-name{margin:.5em 0;font-size:2.5rem}.opinions .user__info-text{font-size:1.8rem}.opinions .user__box{font-size:1.6rem;width:35%;padding:.6em .4em;border-radius:15px}.opinions .user__box-icon{margin-right:.5em}.footer{font-size:1.8rem}}@media (min-width:992px){.nav{padding:.5em;background-color:#fff;border-bottom:1px solid rgba(0,0,0,.2)}.nav__item{margin:0 1em;font-size:1.8rem}.nav__btn{font-size:2rem}.nav__logo{text-decoration:none;font-size:3rem}.nav-mobile{display:none}.nav-desktop{width:100%;z-index:100;position:fixed;display:block}.nav__right{justify-content:right;margin-right:2em}.nav__left,.nav__right{display:flex;align-items:center}.nav__left{top:25%;margin-left:2em;position:absolute}.nav__item{font-size:2rem}.header__heading{font-size:5rem}.header__text{font-size:2.8rem}.aboutus__content{align-items:start}.aboutus__text{width:100%;font-size:2rem}.numbers .wrapper{display:flex;flex-direction:row;justify-content:space-evenly}.numbers__box{width:50%;margin:0}.numbers__box--middle{padding:0 2em;border:none;border-right:2px solid #fff;border-left:2px solid #fff}.numbers__info{font-size:4.2rem;margin-bottom:.2em}.service__box{height:400px;margin:0 2em 4em;width:35%}.service__box-img{transform:translate(-4%,6%)}.service__box-title{font-size:2.5rem;margin-top:.5em}.service__box-text{font-size:1.8rem}.contact__name{font-size:2.4rem}.contact__card{font-size:2rem}.projects .wrapper{flex-direction:row;justify-content:space-around}.projects__box{margin-bottom:0}.footer{font-size:2rem}}@media (min-width:1200px){.nav__item{font-size:2rem}.nav__left{margin-left:5em}.nav__right{margin-right:5em}.header__heading{font-size:6rem}.header__text{font-size:3.3rem}.aboutus__content{align-items:center}.aboutus__text{width:70%;font-size:2.1rem}.numbers__box{width:35%}.service .wrapper{flex-direction:row;justify-content:center;flex-wrap:nowrap}.service__box{margin:1.5em;width:30%}.service__box-text{padding:0 1em}.contact__name{font-size:2.6rem}.contact__card{font-size:2.2rem}.projects .wrapper{justify-content:center}.projects__box{margin:0 2em}.opinions .slide{width:600px}.opinions .fa-chevron-left,.opinions .fa-chevron-right{font-size:40px}.opinions .fa-chevron-left{left:-30px}.opinions .fa-chevron-right{right:-30px}.opinions .user__info-img{width:250px;height:250px}.opinions .user__info-name{font-size:2.8rem}.opinions .user__info-text{font-size:2rem}.opinions .user__box{font-size:1.8rem;width:30%;padding:.7em .5em;border-radius:15px}.opinions .user__box-icon{margin-right:.6em}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
